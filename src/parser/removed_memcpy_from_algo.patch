diff --git a/src/parser/parse_validate.c b/src/parser/parse_validate.c
index f8e3e95..8d4a954 100644
--- a/src/parser/parse_validate.c
+++ b/src/parser/parse_validate.c
@@ -4,52 +4,47 @@
 
 #define MIN(a, b) (a) > (b) ? (b) : (a)
 #define MAX(a, b) (a) > (b) ? (a) : (b)
-#define CLAMP(c) MIN(MAX(c, min), max)
+#define CLAMP(c, max) MIN(MAX(c, min), max)
 // # define CLAMP_f(x) fmin(fmax(x, min), max)
 
 static void please_validate_and_save_enum_of_int(void *src,
 	void *dst, t_field_info *info)
 {
-	int arr[info->array_size];
+	int res;
 	int i;
-	int *tmp;
 	int min;
-	int max;
 
-	max = info->max_abs;
-	min = (info->can_be_signed) ? (-max) : (0);
-	tmp = (int*)src;
+	min = (info->can_be_signed) ? (-info->max_abs) : (0);
 	i = -1;
 	while (++i < info->array_size)
 	{
-		arr[i] = CLAMP(tmp[i]);
+		res = CLAMP(*((int*)src), info->max_abs);
+		*((int*)(dst + i * sizeof(int)) = res;
 		// printf ("\ninfo->array_size[___%d___]original value: [%d], CLAMP value: [%d]\n", i, tmp[i], CLAMP(tmp[i]));
 	}
 	// printf("[%lu] [%lu] [%lu] asdasdasd\n", sizeof(&arr), sizeof(dst), sizeof(src));
-	memcpy(dst, arr, sizeof(arr));
+	//memcpy(dst, arr, sizeof(arr));
 }
 
 static void please_validate_and_save_enum_of_float(void *src,
 	void *dst, t_field_info *info)
 {
-	float arr[info->array_size];
-	float *tmp;
+	double res;
 	int i;
 	int min;
-	int max;
 
-	max = info->max_abs;
-	min = (info->can_be_signed) ? (-max) : (0);
-	tmp = (float*)src;
+	min = (info->can_be_signed) ? (-info->max_abs) : (0);
 	i = -1;
 	while (++i < info->array_size)
 	{
-		arr[i] = CLAMP(tmp[i]);
+		res = CLAMP(*((double*)src), info->max_abs);
+		*((float*)(dst + i * sizeof(float)) = (float)res;
+
 		// printf ("\noriginal value: [%f], CLAMP value: [%f]\n", tmp[i], CLAMP(tmp[i]));
 	}
-	memcpy(dst, arr, sizeof(arr));
-	printf("_____src-float: %f\n", *((float*)src));
-	printf("_____src-doubl: %f\n", *((double*)src));
+	// memcpy(dst, arr, sizeof(arr));
+	// printf("_____src-float: %f\n", *((float*)src));
+	// printf("_____src-doubl: %f\n", *((double*)src));
 }
 
 void please_validate_and_save(void *src, void *dst, t_field_info *info)
@@ -64,19 +59,11 @@ void please_validate_and_save(void *src, void *dst, t_field_info *info)
 void please_validate_and_save_double(void *src, void *dst, t_field_info *info)
 {
 	double res;
-	int min;	//int?
+	int min;
 	int max;
 
-	max = info->max_abs;
-	min = (info->can_be_signed) ? (-max) : (0);
-	res = *((double*)src);
-
-		res = CLAMP(res);
+	min = (info->can_be_signed) ? (-info->max_abs) : (0);
+	res = CLAMP(*((double*)src), info->max_abs);
 	
-	// memcpy(dst, src, sizeof(res));
 	*((float*)dst) = (float)res;
-	printf("_____src-float: %f\n", *((float*)src));
-	printf("_________________________src-doubl: %f\n", *((double*)src));
-	printf("_________________________src-doubl: %f\n", *((double*)dst));
-	printf("_________________________src-doubl: %f\n", res);
 }
\ No newline at end of file
